@tailwind base;
@tailwind components;
@tailwind utilities;

/* iOS Safe Area Support */
.safe-area-bottom {
  padding-bottom: max(env(safe-area-inset-bottom), 0.5rem);
}

.safe-area-top {
  padding-top: env(safe-area-inset-top);
}

/* iOS-style transitions */
.ios-transition {
  transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

/* iOS-specific touch optimizations */
@media (hover: none) and (pointer: coarse) {
  /* Prevent 300ms tap delay on mobile */
  * {
    touch-action: manipulation;
  }
  
  /* Prevent text selection on interactive elements for better touch feel */
  button, a, [role="button"], [role="tab"] {
    -webkit-user-select: none;
    user-select: none;
    -webkit-tap-highlight-color: transparent;
  }
  
  /* Smooth momentum scrolling on iOS - only on scrollable containers */
  main, [role="dialog"], [role="menu"], .overflow-auto, .overflow-scroll {
    -webkit-overflow-scrolling: touch;
  }
}

/* iOS-style frosted glass effect for headers and navigation */
.ios-frosted-glass {
  background: rgba(255, 255, 255, 0.72);
  backdrop-filter: saturate(180%) blur(20px);
  -webkit-backdrop-filter: saturate(180%) blur(20px);
}

.dark .ios-frosted-glass {
  background: rgba(28, 28, 30, 0.72);
}

/* iOS-style card shadow */
.ios-card-shadow {
  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
}

.dark .ios-card-shadow {
  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.25);
}

/* iOS-style floating action button */
.ios-fab {
  box-shadow: 0 8px 24px rgba(0, 122, 255, 0.3);
  transform: scale(1);
  transition: transform 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.ios-fab:active {
  transform: scale(0.95);
}

/* iOS-style list separator */
.ios-list-separator {
  height: 0.5px;
  background: rgba(60, 60, 67, 0.36);
  margin-left: 1rem;
}

.dark .ios-list-separator {
  background: rgba(84, 84, 88, 0.65);
}

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  /* iOS-style light mode colors */
  --background: 240 10% 97%; /* iOS characteristic light gray background */

  --foreground: 214 13% 12%; /* iOS dark text - slightly more contrast */

  --border: 220 13% 88%; /* Subtle iOS borders */

  --card: 0 0% 100%; /* Pure white cards like iOS */

  --card-foreground: 214 13% 12%;

  --card-border: 220 13% 88%; /* Enhanced card borders for better definition */

  --sidebar: 0 0% 98%; /* Clean sidebar background */

  --sidebar-foreground: 210 11% 15%;

  --sidebar-border: 220 13% 87%;

  --sidebar-primary: 211 100% 50%; /* iOS Blue #007AFF */

  --sidebar-primary-foreground: 0 0% 100%;

  --sidebar-accent: 220 14% 95%; /* Soft accent for sidebar */

  --sidebar-accent-foreground: 210 11% 25%;

  --sidebar-ring: 211 100% 50%;

  --popover: 0 0% 100%;

  --popover-foreground: 210 11% 15%;

  --popover-border: 220 13% 91%;

  --primary: 211 100% 50%; /* Classic iOS Blue */

  --primary-foreground: 0 0% 100%;

  --secondary: 220 14% 96%; /* Soft secondary background */

  --secondary-foreground: 210 11% 35%;

  --muted: 220 14% 96%; /* iOS-style muted areas */

  --muted-foreground: 210 9% 45%;

  --accent: 220 14% 97%; /* Very light accent */

  --accent-foreground: 210 11% 25%;

  --destructive: 0 68% 52%; /* iOS red */

  --destructive-foreground: 0 0% 100%;

  --input: 220 13% 91%; /* Clean input backgrounds */
  --ring: 211 100% 50%;
  --chart-1: 211 100% 50%;
  --chart-2: 142 76% 45%;
  --chart-3: 32 95% 55%;
  --chart-4: 280 100% 70%;
  --chart-5: 0 84% 60%;

  --font-sans: Inter, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Menlo, monospace;
  --radius: 1rem; /* 16px - iOS-style larger radius */
  --shadow-2xs: 0px 1px 2px 0px hsl(220 6% 88% / 0.08);
  --shadow-xs: 0px 1px 3px 0px hsl(220 6% 88% / 0.10), 0px 1px 2px 0px hsl(220 6% 88% / 0.06);
  --shadow-sm: 0px 1px 3px 0px hsl(220 6% 88% / 0.12), 0px 1px 2px 0px hsl(220 6% 88% / 0.08);
  --shadow: 0px 4px 6px -1px hsl(220 6% 88% / 0.10), 0px 2px 4px -1px hsl(220 6% 88% / 0.06);
  --shadow-md: 0px 10px 15px -3px hsl(220 6% 88% / 0.10), 0px 4px 6px -2px hsl(220 6% 88% / 0.05);
  --shadow-lg: 0px 20px 25px -5px hsl(220 6% 88% / 0.10), 0px 10px 10px -5px hsl(220 6% 88% / 0.04);
  --shadow-xl: 0px 25px 50px -12px hsl(220 6% 88% / 0.25);
  --shadow-2xl: 0px 50px 100px -20px hsl(220 6% 88% / 0.25);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  /* Royal VIP dark mode colors - Luxurious and elegant */
  --background: 240 20% 8%; /* Deep royal navy background */

  --foreground: 45 15% 95%; /* Warm off-white text */

  --border: 45 40% 45%; /* Subtle gold borders */

  --card: 240 15% 12%; /* Rich deep navy cards */

  --card-foreground: 45 15% 95%;

  --card-border: 45 50% 50%; /* Golden card borders */

  --sidebar: 240 20% 7%; /* Deep royal sidebar */

  --sidebar-foreground: 45 15% 95%;

  --sidebar-border: 45 35% 40%;

  --sidebar-primary: 45 90% 55%; /* Luxurious gold accent */

  --sidebar-primary-foreground: 240 20% 10%; /* Dark text on gold */

  --sidebar-accent: 240 15% 14%; /* Rich accent */

  --sidebar-accent-foreground: 45 20% 85%;

  --sidebar-ring: 45 90% 55%;

  --popover: 240 18% 11%;

  --popover-foreground: 45 15% 95%;

  --popover-border: 45 40% 45%;

  --primary: 45 90% 55%; /* Royal gold primary accent */

  --primary-foreground: 240 20% 10%; /* Dark text on gold */

  --secondary: 240 15% 14%; /* Deep secondary */

  --secondary-foreground: 45 20% 85%;

  --muted: 240 12% 15%; /* Rich muted areas */

  --muted-foreground: 45 10% 55%;

  --accent: 270 60% 45%; /* Royal purple accent */

  --accent-foreground: 45 15% 95%;

  --destructive: 0 70% 50%; /* Deep red for errors */

  --destructive-foreground: 0 0% 100%; /* White text on red */

  --input: 240 15% 13%; /* Deep input backgrounds */
  --ring: 45 90% 55%;
  --chart-1: 45 90% 55%; /* Royal gold */
  --chart-2: 270 60% 60%; /* Royal purple */
  --chart-3: 200 70% 50%; /* Royal blue */
  --chart-4: 340 70% 55%; /* Royal rose */
  --chart-5: 160 50% 45%; /* Emerald green */

  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.30), 0px 0px 1px 0px hsl(45 90% 55% / 0.05);
  --shadow-xs: 0px 1px 3px 0px hsl(0 0% 0% / 0.40), 0px 1px 2px 0px hsl(45 90% 55% / 0.08);
  --shadow-sm: 0px 2px 4px 0px hsl(0 0% 0% / 0.50), 0px 1px 3px 0px hsl(45 90% 55% / 0.10);
  --shadow: 0px 4px 8px -1px hsl(0 0% 0% / 0.50), 0px 2px 4px -1px hsl(45 90% 55% / 0.12);
  --shadow-md: 0px 10px 20px -3px hsl(0 0% 0% / 0.50), 0px 4px 8px -2px hsl(45 90% 55% / 0.15);
  --shadow-lg: 0px 20px 30px -5px hsl(0 0% 0% / 0.50), 0px 10px 15px -5px hsl(45 90% 55% / 0.18);
  --shadow-xl: 0px 30px 60px -12px hsl(0 0% 0% / 0.60), 0px 15px 30px -10px hsl(45 90% 55% / 0.20);
  --shadow-2xl: 0px 50px 100px -20px hsl(0 0% 0% / 0.70), 0px 20px 40px -15px hsl(45 90% 55% / 0.25);

}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
    font-feature-settings: "cv11", "ss01";
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  /* Premium scrollbar styling */
  * {
    scrollbar-width: thin;
    scrollbar-color: hsl(var(--muted)) transparent;
  }

  *::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  *::-webkit-scrollbar-track {
    background: transparent;
  }

  *::-webkit-scrollbar-thumb {
    background: hsl(var(--muted));
    border-radius: 4px;
  }

  *::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--muted-foreground) / 0.3);
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* iOS-style smooth animations and transitions */
  .ios-transition {
    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .ios-scale-press {
    transform-origin: center;
    transition: transform 0.1s ease-out;
  }

  .ios-scale-press:active {
    transform: scale(0.96);
  }

  /* iOS-style fade in animation */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in-up {
    animation: fadeInUp 0.5s ease-out;
  }

  /* iOS-style page transitions */
  @keyframes slideInFromRight {
    from {
      opacity: 0;
      transform: translateX(100%);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes slideInFromLeft {
    from {
      opacity: 0;
      transform: translateX(-100%);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes modalSlideUp {
    from {
      opacity: 0;
      transform: translateY(100%) scale(0.95);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  @keyframes springBounce {
    0% {
      transform: scale(0.3);
      opacity: 0;
    }
    50% {
      transform: scale(1.05);
    }
    70% {
      transform: scale(0.9);
    }
    100% {
      transform: scale(1);
      opacity: 1;
    }
  }

  @keyframes pulseGlow {
    0%, 100% {
      opacity: 1;
      transform: scale(1);
    }
    50% {
      opacity: 0.8;
      transform: scale(1.02);
    }
  }

  /* iOS-style loading spinner */
  @keyframes iosSpinner {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  .animate-slide-in-right {
    animation: slideInFromRight 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .animate-slide-in-left {
    animation: slideInFromLeft 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .animate-modal-slide-up {
    animation: modalSlideUp 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .animate-spring-bounce {
    animation: springBounce 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  }

  .animate-pulse-glow {
    animation: pulseGlow 2s ease-in-out infinite;
  }

  .animate-ios-spinner {
    animation: iosSpinner 1s linear infinite;
  }

  /* FlipClock animations */
  @keyframes flipDown {
    from {
      transform: rotateX(0deg);
    }
    to {
      transform: rotateX(-90deg);
    }
  }

  @keyframes flipUp {
    from {
      transform: rotateX(90deg);
    }
    to {
      transform: rotateX(0deg);
    }
  }

  .animate-flip {
    animation: flipDown 0.15s ease-in-out;
  }

  .animate-flip-up {
    animation: flipUp 0.15s ease-in-out;
  }

  /* iOS-style staggered animations */
  .stagger-fade-in {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.5s ease-out forwards;
  }

  .stagger-fade-in:nth-child(1) { animation-delay: 0ms; }
  .stagger-fade-in:nth-child(2) { animation-delay: 100ms; }
  .stagger-fade-in:nth-child(3) { animation-delay: 200ms; }
  .stagger-fade-in:nth-child(4) { animation-delay: 300ms; }
  .stagger-fade-in:nth-child(5) { animation-delay: 400ms; }
  .stagger-fade-in:nth-child(6) { animation-delay: 500ms; }

  /* Premium shimmer effect for progress bars */
  @keyframes shimmer {
    0% {
      transform: translateX(-100%);
    }
    100% {
      transform: translateX(100%);
    }
  }

  .animate-shimmer {
    animation: shimmer 2s infinite;
  }

  /* iOS-style blur effect */
  .ios-blur {
    backdrop-filter: blur(10px) saturate(180%);
    -webkit-backdrop-filter: blur(10px) saturate(180%);
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* 3D flip clock utilities */
  .perspective-1000 {
    perspective: 1000px;
  }

  .preserve-3d {
    transform-style: preserve-3d;
  }
}